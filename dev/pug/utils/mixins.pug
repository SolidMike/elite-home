mixin icon(name,mod)
	if(mod)
		svg(class="svg-sprite-icon icon-" + name + ' ' + mod)
			use(xlink:href="static/images/svg/symbol/sprite.svg#" + name)
	else
		svg(class="svg-sprite-icon icon-" + name)
			use(xlink:href="static/images/svg/symbol/sprite.svg#" + name)

//- Button 1.1
//- 1.1: Added disabled state
mixin c-button(options, attributes)
	- var DEFAULT_OPTIONS = {};
	- DEFAULT_OPTIONS.label = 'Button label' // string
	- DEFAULT_OPTIONS.skin = 'default' // string
	- DEFAULT_OPTIONS.size = false // string
	- DEFAULT_OPTIONS.href = false // string
	- DEFAULT_OPTIONS.icon = false // object
	- DEFAULT_OPTIONS.disabled = false // boolean
	- DEFAULT_OPTIONS.iconPosition = 'left' // can be {left, right}

	//- Options that shouldn't be used
	- DEFAULT_OPTIONS.variant = false // string

	- options = Object.assign({}, DEFAULT_OPTIONS, options || {});

	mixin c-button-content
		if options.icon && !options.iconPosition || options.icon && options.iconPosition == "left"
			+icon(options.icon.name, options.icon.mod)
			span.c-button__label= options.label
		if options.icon && options.iconPosition == "right"
			span.c-button__label= options.label
			+icon(options.icon.name, options.icon.mod)
		if !options.icon
			span.c-button__label= options.label
		block

	if options.variant
		| Error: please use skin to denote button variants

	if options.disabled && !options.href
		button.c-button( class=`${ options.size ? "c-button_" + options.size : ""} ${ "c-button_" + options.skin}` type="button" disabled)&attributes(attributes)
			+c-button-content
	else
		if options.href
			a.c-button(class=`${ options.size ? "c-button__" + options.size : ""} ${ options.disabled ? "c-button_disabled" : ""} ${ options.skin ? "c-button_" + options.skin : ""}` href=options.href)&attributes(attributes)
				+c-button-content
		if !options.href
			button.c-button( class=`${ options.size ? "c-button__" + options.size : ""} ${ "c-button_" + options.skin}` type="button")&attributes(attributes)
				+c-button-content

mixin card(config)
	- config.href = config.href || ''
	- config.img = config.img || ''
	- config.title = config.title || ''
	- config.descr = config.descr || ''
	- config.price = config.price || ''
	- config.buttonType = buttonTypeOrder || buttonTypeReadMore
	.card
		a.card__link(href= config.href)
			img(src= config.img).card__img
		.card__inner
			a.card__link(href= config.href)
				.card__title.card-title= config.title
			.card__descr= config.descr
			if (config.price)
				.card__price= config.price
			+c-button(config.buttonType)

mixin form_element(config)
	//- default values
	- config.class_array = config.class_array || {}
	- config.class_array.block_class_mod = config.class_array.block_class_mod || ''
	- config.class_array.class_mod = config.class_array.class_mod || ''
	- config.class_array.elem_class = config.class_array.elem_class || ''
	- config.add_class = config.add_class || ''
	- config.placeholder = config.placeholder || ''
	if !config.id
		- config.id = config.title.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	else
		- config.id = config.id.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'
		dl.form_cell(class=config.class_array.block_class_mod)
			dt.form_c_hline(class=config.class_array.class_mod)
				label(for=config.id) #{config.title}
			dd.form_c_f_w(class=config.class_array.class_mod)
				if config.type === 'text' || config.type === 'password' || config.type === 'email'
					if config.value
						input.f_c_field(value=config.value type=config.type id=config.id class=`${config.class_array.elem_class} ${config.add_class}` placeholder=config.placeholder)
						block
					else
						input.f_c_field(type=config.type id=config.id class=`${config.class_array.elem_class} ${config.add_class}` placeholder=config.placeholder)
						block
				if config.type === 'textarea'
					textarea.f_c_field(type=config.type id=config.id class=`${config.class_array.elem_class} ${config.add_class}` placeholder=config.placeholder rows="1") #{config.value}
					block
				if config.type === 'file'
					input.f_c_field(type=config.type id=config.id class=`${config.class_array.elem_class} ${config.add_class}` placeholder=config.placeholder)
					.f_c_field_file_field
						span.f_c_field_file_text #{config.title}
						span.f_c_field_file_butt Choose File
				if config.type === 'select'
					select.f_c_field(id=config.id class=`${config.class_array.elem_class} ${config.add_class}` data-placeholder=config.placeholder)
						each option in config.options
							option(value=option)= option
					block
	if config.type === 'checkbox' || config.type === 'radio'
		label.lbl_rb_ch_block(class=config.class_array.block_class_mod)
			if config.checked
				input.lbl_inp_rb_ch(name=config.name type=config.type class=`${config.class_array.elem_class} ${config.add_class}` checked='checked')
			else
				input.lbl_inp_rb_ch(name=config.name type=config.type class=`${config.class_array.elem_class} ${config.add_class}`)
			span.lbl_rb_ch_text(class=config.class_mod) #{config.title}

mixin breadcrumbs-item(text,href)
	li.breadcrumbs__item
		if(href)
			a.breadcrumbs__link(href=href)=text
		else
			span.breadcrumbs__text=text

mixin menu(menuSelected)
	nav.menu
		ul.menu__list
			each menuItem in menuList
				+menu_item(menuItem, menuSelected, submenuSelected)

mixin menu_item(menuItem, menuSelected, submenuSelected)
	li.menu__item(class = menuSelected === menuItem.title ? "active" : "")
		a.menu__link(href = menuItem.link)= menuItem.title
		if menuItem.subnav.length > 0
			ul.submenu
				each submenuItem in menuItem.subnav
					li.submenu__item(class = submenuSelected === submenuItem.title ? "active" : "")
						a.submenu__link(href=submenuItem.link)=submenuItem.title

mixin socialLink(icon,link)
	li.socials__item
		a(href=link).socials__link
			+icon(icon, 'socials__icon')

//- Pagination
mixin pagination(amount, active, ellipsis, last, arrows)
	//- amount - amount of displayed numbers +1 prior ellipsis
	//- active - active number
	//- ellipsis - number to be replaced by ellipsis
	//- last - number after ellipsis
	//- .icon-pagination-prev and .icon-pagination-next
	.pagination
		//- prev arrow
		if (arrows === arrows)
			a(href="#" title="Prev page").pagination__prev.icon-pagination-prev
				+icon('slider-arrow-left')
		else

		ul.pagination__list
			//- before ellipsis
			- for (var index = 1; index <= amount; index++)
				if (index === active)
					li.pagination__item.is-active
						a(href="#" title=`Current page ${index}`).pagination__number= index
				else if (index === ellipsis)
					li.pagination__item
						a(href="#" title="Show more").pagination__number.is-collapsed ...
				else
					li.pagination__item
						a(href="#" title=`Go to page ${index}`).pagination__number= index
			//- after ellipsis
			- for (var index = amount + 1; index <= last; index++)
				li.pagination__item
					a(href="#" title=`Go to pagÐµ ${index}`).pagination__number= index

		//- next arrow
		if (arrows === arrows)
			a(href="#" title="Next page").pagination__next.icon-pagination-next
				+icon('slider-arrow-right')
		else